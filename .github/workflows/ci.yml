name: MPOC CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ---- Unit Tests (Redux, utils, pure logic) ----
  unit:
    name: Unit (Vitest)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Run unit tests
        run: bun run test:unit

      - name: Upload coverage (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-json
          path: '**/coverage/coverage-summary.json'
          if-no-files-found: ignore

  # ---- Cypress: Next App (E2E & Component) ----
  next-app-cypress:
    name: Next App (Cypress)
    needs: unit
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/cypress_cache

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/cypress_cache
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-cypress-

      - name: Install dependencies
        run: bun install

      - name: Build Next App
        run: bun --filter next-app build

      - uses: cypress-io/github-action@v6
        with:
          working-directory: apps/next-app
          start: bun --filter next-app start
          wait-on: http://localhost:3000
          wait-on-timeout: 60
          install: false

      - uses: cypress-io/github-action@v6
        with:
          working-directory: apps/next-app
          command: bun run cypress:ct:ci
          install: false

      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-next
          path: apps/next-app/cypress/videos
          if-no-files-found: ignore

      - name: Upload Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-next
          path: apps/next-app/cypress/screenshots
          if-no-files-found: ignore

  # ---- Cypress: Vite App (E2E & Component) ----
  vite-app-cypress:
    name: Vite App (Cypress)
    needs: unit
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/cypress_cache

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/cypress_cache
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-cypress-

      - name: Install dependencies
        run: bun install

      - name: Build Vite App
        run: bun --filter vite-app build

      - uses: cypress-io/github-action@v6
        with:
          working-directory: apps/vite-app
          start: bun --filter vite-app preview
          wait-on: http://localhost:4173
          wait-on-timeout: 60
          install: false

      - uses: cypress-io/github-action@v6
        with:
          working-directory: apps/vite-app
          command: bun run cypress:ct:ci
          install: false

      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-vite
          path: apps/vite-app/cypress/videos
          if-no-files-found: ignore

      - name: Upload Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-vite
          path: apps/vite-app/cypress/screenshots
          if-no-files-found: ignore

